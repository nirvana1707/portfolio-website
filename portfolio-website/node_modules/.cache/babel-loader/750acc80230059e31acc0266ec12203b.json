{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:/node-dir/anothertrial/portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"F:/node-dir/anothertrial/portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"F:/node-dir/anothertrial/portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"F:/node-dir/anothertrial/portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Circle = void 0;\n\nvar Range_1 = require(\"./Range\");\n\nvar Circle = /*#__PURE__*/function (_Range_1$Range) {\n  _inherits(Circle, _Range_1$Range);\n\n  var _super = _createSuper(Circle);\n\n  function Circle(x, y, radius) {\n    var _this;\n\n    _classCallCheck(this, Circle);\n\n    _this = _super.call(this, x, y);\n    _this.radius = radius;\n    return _this;\n  }\n\n  _createClass(Circle, [{\n    key: \"contains\",\n    value: function contains(point) {\n      var d = Math.pow(point.x - this.position.x, 2) + Math.pow(point.y - this.position.y, 2);\n      return d <= this.radius * this.radius;\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range) {\n      var rect = range;\n      var circle = range;\n      var pos1 = this.position;\n      var pos2 = range.position;\n      var xDist = Math.abs(pos2.x - pos1.x);\n      var yDist = Math.abs(pos2.y - pos1.y);\n      var r = this.radius;\n\n      if (circle.radius !== undefined) {\n        var rSum = r + circle.radius;\n        var dist = Math.sqrt(xDist * xDist + yDist + yDist);\n        return rSum > dist;\n      } else if (rect.size !== undefined) {\n        var w = rect.size.width;\n        var h = rect.size.height;\n        var edges = Math.pow(xDist - w, 2) + Math.pow(yDist - h, 2);\n\n        if (xDist > r + w || yDist > r + h) {\n          return false;\n        }\n\n        if (xDist <= w || yDist <= h) {\n          return true;\n        }\n\n        return edges <= r * r;\n      }\n\n      return false;\n    }\n  }]);\n\n  return Circle;\n}(Range_1.Range);\n\nexports.Circle = Circle;","map":{"version":3,"sources":["F:/node-dir/anothertrial/portfolio-website/node_modules/tsparticles/dist/Utils/Circle.js"],"names":["Object","defineProperty","exports","value","Circle","Range_1","require","x","y","radius","point","d","Math","pow","position","range","rect","circle","pos1","pos2","xDist","abs","yDist","r","undefined","rSum","dist","sqrt","size","w","width","h","height","edges","Range"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;IACMF,M;;;;;AACF,kBAAYG,CAAZ,EAAeC,CAAf,EAAkBC,MAAlB,EAA0B;AAAA;;AAAA;;AACtB,8BAAMF,CAAN,EAASC,CAAT;AACA,UAAKC,MAAL,GAAcA,MAAd;AAFsB;AAGzB;;;;WACD,kBAASC,KAAT,EAAgB;AACZ,UAAMC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,CAACH,CAAN,GAAU,KAAKO,QAAL,CAAcP,CAAjC,EAAoC,CAApC,IAAyCK,IAAI,CAACC,GAAL,CAASH,KAAK,CAACF,CAAN,GAAU,KAAKM,QAAL,CAAcN,CAAjC,EAAoC,CAApC,CAAnD;AACA,aAAOG,CAAC,IAAI,KAAKF,MAAL,GAAc,KAAKA,MAA/B;AACH;;;WACD,oBAAWM,KAAX,EAAkB;AACd,UAAMC,IAAI,GAAGD,KAAb;AACA,UAAME,MAAM,GAAGF,KAAf;AACA,UAAMG,IAAI,GAAG,KAAKJ,QAAlB;AACA,UAAMK,IAAI,GAAGJ,KAAK,CAACD,QAAnB;AACA,UAAMM,KAAK,GAAGR,IAAI,CAACS,GAAL,CAASF,IAAI,CAACZ,CAAL,GAASW,IAAI,CAACX,CAAvB,CAAd;AACA,UAAMe,KAAK,GAAGV,IAAI,CAACS,GAAL,CAASF,IAAI,CAACX,CAAL,GAASU,IAAI,CAACV,CAAvB,CAAd;AACA,UAAMe,CAAC,GAAG,KAAKd,MAAf;;AACA,UAAIQ,MAAM,CAACR,MAAP,KAAkBe,SAAtB,EAAiC;AAC7B,YAAMC,IAAI,GAAGF,CAAC,GAAGN,MAAM,CAACR,MAAxB;AACA,YAAMiB,IAAI,GAAGd,IAAI,CAACe,IAAL,CAAUP,KAAK,GAAGA,KAAR,GAAgBE,KAAhB,GAAwBA,KAAlC,CAAb;AACA,eAAOG,IAAI,GAAGC,IAAd;AACH,OAJD,MAKK,IAAIV,IAAI,CAACY,IAAL,KAAcJ,SAAlB,EAA6B;AAC9B,YAAMK,CAAC,GAAGb,IAAI,CAACY,IAAL,CAAUE,KAApB;AACA,YAAMC,CAAC,GAAGf,IAAI,CAACY,IAAL,CAAUI,MAApB;AACA,YAAMC,KAAK,GAAGrB,IAAI,CAACC,GAAL,CAASO,KAAK,GAAGS,CAAjB,EAAoB,CAApB,IAAyBjB,IAAI,CAACC,GAAL,CAASS,KAAK,GAAGS,CAAjB,EAAoB,CAApB,CAAvC;;AACA,YAAIX,KAAK,GAAGG,CAAC,GAAGM,CAAZ,IAAiBP,KAAK,GAAGC,CAAC,GAAGQ,CAAjC,EAAoC;AAChC,iBAAO,KAAP;AACH;;AACD,YAAIX,KAAK,IAAIS,CAAT,IAAcP,KAAK,IAAIS,CAA3B,EAA8B;AAC1B,iBAAO,IAAP;AACH;;AACD,eAAOE,KAAK,IAAIV,CAAC,GAAGA,CAApB;AACH;;AACD,aAAO,KAAP;AACH;;;;EAnCgBlB,OAAO,CAAC6B,K;;AAqC7BhC,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\nconst Range_1 = require(\"./Range\");\r\nclass Circle extends Range_1.Range {\r\n    constructor(x, y, radius) {\r\n        super(x, y);\r\n        this.radius = radius;\r\n    }\r\n    contains(point) {\r\n        const d = Math.pow(point.x - this.position.x, 2) + Math.pow(point.y - this.position.y, 2);\r\n        return d <= this.radius * this.radius;\r\n    }\r\n    intersects(range) {\r\n        const rect = range;\r\n        const circle = range;\r\n        const pos1 = this.position;\r\n        const pos2 = range.position;\r\n        const xDist = Math.abs(pos2.x - pos1.x);\r\n        const yDist = Math.abs(pos2.y - pos1.y);\r\n        const r = this.radius;\r\n        if (circle.radius !== undefined) {\r\n            const rSum = r + circle.radius;\r\n            const dist = Math.sqrt(xDist * xDist + yDist + yDist);\r\n            return rSum > dist;\r\n        }\r\n        else if (rect.size !== undefined) {\r\n            const w = rect.size.width;\r\n            const h = rect.size.height;\r\n            const edges = Math.pow(xDist - w, 2) + Math.pow(yDist - h, 2);\r\n            if (xDist > r + w || yDist > r + h) {\r\n                return false;\r\n            }\r\n            if (xDist <= w || yDist <= h) {\r\n                return true;\r\n            }\r\n            return edges <= r * r;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.Circle = Circle;\r\n"]},"metadata":{},"sourceType":"script"}