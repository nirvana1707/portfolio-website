{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmitterInstance = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Enums_1 = require(\"../../Enums\");\n\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\n\nfunction randomCoordinate(position, offset) {\n  return position + offset * (Math.random() - 0.5);\n}\n\nfunction randomPosition(position, offset) {\n  return {\n    x: randomCoordinate(position.x, offset.x),\n    y: randomCoordinate(position.y, offset.y)\n  };\n}\n\nclass EmitterInstance {\n  constructor(emitters, container, emitterOptions, position) {\n    var _a, _b, _c;\n\n    this.emitters = emitters;\n    this.container = container;\n    this.initialPosition = position;\n    this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n    this.position = (_a = this.initialPosition) !== null && _a !== void 0 ? _a : this.calcPosition();\n    this.name = emitterOptions.name;\n    let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n\n    if (particlesOptions === undefined) {\n      particlesOptions = {};\n    }\n\n    if (particlesOptions.move === undefined) {\n      particlesOptions.move = {};\n    }\n\n    if (particlesOptions.move.direction === undefined) {\n      particlesOptions.move.direction = this.emitterOptions.direction;\n    }\n\n    this.particlesOptions = particlesOptions;\n    this.size = (_b = this.emitterOptions.size) !== null && _b !== void 0 ? _b : (() => {\n      const size = new EmitterSize_1.EmitterSize();\n      size.load({\n        height: 0,\n        mode: Enums_1.SizeMode.percent,\n        width: 0\n      });\n      return size;\n    })();\n    this.lifeCount = (_c = this.emitterOptions.life.count) !== null && _c !== void 0 ? _c : -1;\n    this.immortal = this.lifeCount <= 0;\n    this.play();\n  }\n\n  play() {\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n      if (this.startInterval === undefined) {\n        const delay = 1000 * this.emitterOptions.rate.delay / this.container.retina.reduceFactor;\n        this.startInterval = window.setInterval(() => {\n          this.emit();\n        }, delay);\n      }\n\n      if (this.lifeCount > 0 || this.immortal) {\n        this.prepareToDie();\n      }\n    }\n  }\n\n  pause() {\n    const interval = this.startInterval;\n\n    if (interval !== undefined) {\n      clearInterval(interval);\n      delete this.startInterval;\n    }\n  }\n\n  resize() {\n    const initialPosition = this.initialPosition;\n    this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  }\n\n  prepareToDie() {\n    var _a;\n\n    const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal) && duration !== undefined && duration > 0) {\n      setTimeout(() => {\n        var _a;\n\n        this.pause();\n\n        if (!this.immortal) {\n          this.lifeCount--;\n        }\n\n        if (this.lifeCount > 0 || this.immortal) {\n          this.position = this.calcPosition();\n          setTimeout(() => {\n            this.play();\n          }, ((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor);\n        } else {\n          this.destroy();\n        }\n      }, duration * 1000);\n    }\n  }\n\n  destroy() {\n    this.emitters.removeEmitter(this);\n  }\n\n  calcPosition() {\n    var _a, _b;\n\n    const container = this.container;\n    const percentPosition = this.emitterOptions.position;\n    return {\n      x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n      y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n    };\n  }\n\n  emit() {\n    const container = this.container;\n    const position = this.position;\n    const offset = {\n      x: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n      y: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.height * this.size.height / 100 : this.size.height\n    };\n\n    for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n      container.particles.addParticle(randomPosition(position, offset), this.particlesOptions);\n    }\n  }\n\n}\n\nexports.EmitterInstance = EmitterInstance;","map":{"version":3,"sources":["F:/node-dir/portfolio-website/node_modules/tsparticles/dist/Plugins/Emitters/EmitterInstance.js"],"names":["Object","defineProperty","exports","value","EmitterInstance","Utils_1","require","Enums_1","EmitterSize_1","randomCoordinate","position","offset","Math","random","randomPosition","x","y","constructor","emitters","container","emitterOptions","_a","_b","_c","initialPosition","Utils","deepExtend","calcPosition","name","particlesOptions","particles","undefined","move","direction","size","EmitterSize","load","height","mode","SizeMode","percent","width","lifeCount","life","count","immortal","play","retina","reduceFactor","startInterval","delay","rate","window","setInterval","emit","prepareToDie","pause","interval","clearInterval","resize","isPointInside","canvas","duration","setTimeout","destroy","removeEmitter","percentPosition","i","quantity","addParticle"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\nfunction randomCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n}\nfunction randomPosition(position, offset) {\n    return {\n        x: randomCoordinate(position.x, offset.x),\n        y: randomCoordinate(position.y, offset.y),\n    };\n}\nclass EmitterInstance {\n    constructor(emitters, container, emitterOptions, position) {\n        var _a, _b, _c;\n        this.emitters = emitters;\n        this.container = container;\n        this.initialPosition = position;\n        this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n        this.position = (_a = this.initialPosition) !== null && _a !== void 0 ? _a : this.calcPosition();\n        this.name = emitterOptions.name;\n        let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n        if (particlesOptions === undefined) {\n            particlesOptions = {};\n        }\n        if (particlesOptions.move === undefined) {\n            particlesOptions.move = {};\n        }\n        if (particlesOptions.move.direction === undefined) {\n            particlesOptions.move.direction = this.emitterOptions.direction;\n        }\n        this.particlesOptions = particlesOptions;\n        this.size =\n            (_b = this.emitterOptions.size) !== null && _b !== void 0 ? _b : (() => {\n                const size = new EmitterSize_1.EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: Enums_1.SizeMode.percent,\n                    width: 0,\n                });\n                return size;\n            })();\n        this.lifeCount = (_c = this.emitterOptions.life.count) !== null && _c !== void 0 ? _c : -1;\n        this.immortal = this.lifeCount <= 0;\n        this.play();\n    }\n    play() {\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n            if (this.startInterval === undefined) {\n                const delay = (1000 * this.emitterOptions.rate.delay) / this.container.retina.reduceFactor;\n                this.startInterval = window.setInterval(() => {\n                    this.emit();\n                }, delay);\n            }\n            if (this.lifeCount > 0 || this.immortal) {\n                this.prepareToDie();\n            }\n        }\n    }\n    pause() {\n        const interval = this.startInterval;\n        if (interval !== undefined) {\n            clearInterval(interval);\n            delete this.startInterval;\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    prepareToDie() {\n        var _a;\n        const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            setTimeout(() => {\n                var _a;\n                this.pause();\n                if (!this.immortal) {\n                    this.lifeCount--;\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.position = this.calcPosition();\n                    setTimeout(() => {\n                        this.play();\n                    }, (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor);\n                }\n                else {\n                    this.destroy();\n                }\n            }, duration * 1000);\n        }\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.emitterOptions.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    emit() {\n        const container = this.container;\n        const position = this.position;\n        const offset = {\n            x: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            y: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n        for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n            container.particles.addParticle(randomPosition(position, offset), this.particlesOptions);\n        }\n    }\n}\nexports.EmitterInstance = EmitterInstance;\n"]},"metadata":{},"sourceType":"script"}